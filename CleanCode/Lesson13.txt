1. public class CatalogContextSeed
    {
        public static async Task SeedAsync(CatalogContext catalogContext,
            ILoggerFactory loggerFactory, int? retry = 0)
        {
            int retryForAvailability = retry.Value;
            try
            {              
                if (!await catalogContext.CatalogBrands.AnyAsync())
                {
                    await catalogContext.CatalogBrands.AddRangeAsync(
                        GetPreconfiguredCatalogBrands());

                    await catalogContext.SaveChangesAsync();
                }
			}
		}
	}
# Ранее связывание для переменной retryForAvailability обусловлено максимальной простотой кода для проверки на доступ к каталогу.

2. # Более позднее связывание для переменной key обусловлено работой с отдельной константой для инициализации секретным ключом в зависимости от id пользователя.

 public async Task<string> GetTokenAsync(string userName)
        {
            var tokenHandler = new JwtSecurityTokenHandler();
            var key = Encoding.ASCII.GetBytes(AuthorizationConstants.JWT_SECRET_KEY);
            var user = await _userManager.FindByNameAsync(userName);
            var roles = await _userManager.GetRolesAsync(user);
            var claims = new List<Claim> { new Claim(ClaimTypes.Name, userName) };
			
3. # Связывание во время выполнения программы для перменных user и roles обусловлено тем, что база данных постоянно обновляется.